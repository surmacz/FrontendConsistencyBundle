{"name":"FrontendConsistencyBundle","tagline":"This Bundle provides system to help maintain frontend consistency on different web browsers","body":"Frontend Consistency Bundle\r\n=====================\r\n\r\nHave you ever had problems with frontend consistency on your website, these annoying situations when frontend developer change code in one place and unintentionally broke view in another one or on another browser? If so, this bundle is for you. It provides a tool which maintains frontend consistency.\r\n\r\nIt supports different web browsers, with different configurations (i.e. all that Selenium can handle), for example:\r\n- Firefox for Windows/Linux,\r\n- Chrome for Windows/Linux,\r\n- Safari for Windows/Mac,\r\n- Mobile browsers,\r\n- etc.\r\n\r\n**Way of working**:\r\nBundle uses Selenium server(s) to generate screenshots (with simple phpunit tests) on different environments (browsers). Up-to-date screenshots must be generated locally after user makes some changes and before commit, to ensure consistency. Bundle compares new-generated screenshots with the ones saved in repository and if there's inconsistency it informs user about it. User has to decide if view changes are valid or invalid. User is aware of which view has changed.\r\n\r\n**Warning**: to make this bundle work you have to have all the requested Selenium environments configurated. For more information visit Selenium website.\r\n\r\nInstallation\r\n------------\r\nAdd to your Symfony composer.json the following code:\r\n\r\n``` json\r\n# composer.json\r\n{\r\n    \"require\": {\r\n        \"surmacz/frontend-consistency-bundle\": \"dev-master\"\r\n    },\r\n    \"repositories\" : [{\r\n        \"type\" : \"vcs\",\r\n        \"url\" : \"https://github.com/surmacz/FrontendConsistencyBundle.git\"\r\n    }]\r\n}\r\n```\r\n\r\nThen update your vendors with composer update command.\r\n\r\nTo register new bundle add this line of code into your AppKernel class:\r\n\r\n``` php\r\n# app/AppKernel.php\r\n\r\nnew Surmacz\\FrontendConsistencyBundle\\FrontendConsistencyBundle()\r\n```\r\n\r\nIt is required to install ImageMagick package on your machine. Download version specific for your system:\r\nhttp://www.imagemagick.org/script/binary-releases.php\r\nUnpack and save (and compile if needed) files on your disk (\"compare\" and \"identify\" commands will be needed).\r\n\r\nConfiguration\r\n-------------\r\nPrepare new configuration into your config.yml file:\r\n\r\n``` yml\r\n# app/config/config.yml\r\n\r\n#Frontend Consistency Bundle Configuration\r\nfrontend_consistency:\r\n    browser_prefix_url: 'http://localhost' #prefix url of the browser - begining of each selenium test\r\n    screenshot_global_path: 'consistency/global' #directory in Symfony root where global screenshots will be saved\r\n    screenshot_local_path:  'consistency/local' #directory in Symfony root where local screenshots will be saved; ignore this directory in git\r\n    php_unit_path: 'phpunit' #command to run phpunit\r\n    php_unit_params: '-c app/phpunit.xml' #parameters for phpunit command (optional)\r\n    image_compare_path: '/usr/local/bin/compare' #path to compare command from ImageMagick package\r\n    image_identify_path: '/usr/local/bin/identify' #path to identify command from ImageMagick package\r\n    environments: #below you define selenium servers envoronments parameters\r\n        pc_firefox: #unique environment name\r\n            path: 'pc/firefox' #screenshot subdirectory in screenshot global and local path\r\n            browser: '*firefox' #selenium webdriver, read selenium doc for more\r\n            host: '127.0.0.1' #server host\r\n            port: 4444 #server port\r\n            timeout: 30\r\n        pc_ie:\r\n            path: 'pc/ie'\r\n            browser: '*iexplore'\r\n            host: '127.0.0.1'\r\n            port: 4444\r\n            timeout: 30\r\n```\r\n \r\nChange above settings according to your needs and add as many environments as you like (and have configured).\r\n\r\nNext step is to write some selenium tests to generate screenshots. First you need to create directory \"ConsistencyTests\" in bundle, in which you want to have consistency tests.\r\nBelow I attach example test for standard Acme Bundle:\r\n\r\n``` php\r\n# src/Acme/DemoBundle/ConsistencyTests/Controller/DemoControllerTest.php\r\n\r\nnamespace Acme\\DemoBundle\\ConsistencyTests\\Controller;\r\n\r\nuse Surmacz\\FrontendConsistencyBundle\\Lib\\ConsistencyBase;\r\n\r\nclass DemoControllerTest extends ConsistencyBase\r\n{\r\n    public function testDemo()\r\n    {\r\n        $this->open('/demo');\r\n        $this->finalize();\r\n    }\r\n\r\n    public function testHello()\r\n    {\r\n        $this->open('/demo/hello/Wojtek');\r\n        $this->finalize();\r\n    }\r\n\r\n    public function testContact()\r\n    {\r\n        $this->open('/demo/contact');\r\n        $this->finalize();\r\n    }\r\n}\r\n```\r\n\r\nEach test looks similar and need to open page on which we want take screenshot. Then you need to run \"finalize()\" method which generates screenshot. For more information about writing these test read here (https://phpunit.de/manual/3.7/en/selenium.html).\r\n\r\nUsage\r\n-----\r\nAfter that you can run your first verification which generates screenshots and place them into global directory:\r\n``` bash\r\nphp app/console consistency:verify --init\r\n```\r\n\r\n\"init\" param should be used only when there are no screenshots in global directory (i.e. at the begining of your adventure with this bundle). Later use only the following code to verify frontend consistency:\r\n``` bash\r\nphp app/console consistency:verify\r\n```\r\n\r\nYou can run verification in \"no verbose\" mode - it is recommended for continuous integration processes. It returns \"0\" for inconsistency or \"1\" for consistency:\r\n``` bash\r\nphp app/console consistency:verify --no-verbose\r\n```\r\n","google":"UA-55691067-1","note":"Don't delete this file! It's used internally to help with page regeneration."}